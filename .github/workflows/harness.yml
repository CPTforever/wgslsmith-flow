name: harness

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - crates/parser/**
      - crates/reconditioner/**
      - crates/wgslsmith/**
      - docs/**

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        include:
          - os: windows-latest
            artifact: win64
            exe_suffix: .exe
          - os: macos-latest
            artifact: macos64
            exe_suffix: ""
          - os: ubuntu-latest
            artifact: linux64
            exe_suffix: ""

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Download dawn libs
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        shell: bash
        run: |
          release_tag=`gh release view --json tagName -q '.tagName' -R wgslsmith/dawn-build`
          gh release download $release_tag -p dawn-static-${{ matrix.artifact }}.tar.gz -R wgslsmith/dawn-build
          mkdir dawn-static-${{ matrix.artifact }}
          tar -xvf dawn-static-${{ matrix.artifact }}.tar.gz

      - name: Checkout dawn repo
        working-directory: ${{ runner.temp }}
        shell: bash
        run: |
          git clone https://dawn.googlesource.com/dawn
          cd dawn
          git checkout $(cat '${{ github.workspace }}/dawn-static-${{ matrix.artifact }}/COMMIT')

      - name: Build harness
        uses: actions-rs/cargo@v1
        env:
          DAWN_SRC_DIR: ${{ runner.temp }}/dawn
          DAWN_BUILD_DIR: ${{ github.workspace }}/dawn-static-${{ matrix.artifact }}
          MACOSX_DEPLOYMENT_TARGET: "11.0"
        with:
          command: build
          args: -p harness --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: harness-${{ matrix.artifact }}
          path: target/release/harness${{ matrix.exe_suffix }}

  test:
    runs-on: ${{ matrix.os }}

    needs: build

    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        include:
          - os: windows-latest
            artifact: win64
          - os: ubuntu-latest
            artifact: linux64

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Download swiftshader
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          release_tag=`gh release view --json tagName -q '.tagName' -R wgslsmith/swiftshader-build`
          gh release download $release_tag -p swiftshader-${{ matrix.artifact }}.tar.gz -R wgslsmith/swiftshader-build
          mkdir swiftshader-${{ matrix.artifact }}
          tar -xvf swiftshader-${{ matrix.artifact }}.tar.gz

      - name: Download harness
        uses: actions/download-artifact@v3
        with:
          name: harness-${{ matrix.artifact }}

      - name: Copy vulkan loader
        if: matrix.os == 'windows-latest'
        run: cp swiftshader-${{ matrix.artifact }}/vulkan-1.dll .

      - name: Run test shaders
        env:
          VK_ICD_FILENAMES: swiftshader-${{ matrix.artifact }}/vk_swiftshader_icd.json
        shell: bash
        run: |
          chmod +x ./harness
          cat crates/harness/test.wgsl | ./harness
